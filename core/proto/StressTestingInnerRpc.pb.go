// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: StressTestingInnerRpc.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 请求连接Master,master然后反向连接worker ,
type ConnectMasterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RpcHost string `protobuf:"bytes,1,opt,name=rpcHost,proto3" json:"rpcHost,omitempty"` //自己的rpc地址
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`       //名称
}

func (x *ConnectMasterRequest) Reset() {
	*x = ConnectMasterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StressTestingInnerRpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectMasterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectMasterRequest) ProtoMessage() {}

func (x *ConnectMasterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_StressTestingInnerRpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectMasterRequest.ProtoReflect.Descriptor instead.
func (*ConnectMasterRequest) Descriptor() ([]byte, []int) {
	return file_StressTestingInnerRpc_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectMasterRequest) GetRpcHost() string {
	if x != nil {
		return x.RpcHost
	}
	return ""
}

func (x *ConnectMasterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 请求连接Master
type ConnectMasterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` //0成功
}

func (x *ConnectMasterResponse) Reset() {
	*x = ConnectMasterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StressTestingInnerRpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectMasterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectMasterResponse) ProtoMessage() {}

func (x *ConnectMasterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_StressTestingInnerRpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectMasterResponse.ProtoReflect.Descriptor instead.
func (*ConnectMasterResponse) Descriptor() ([]byte, []int) {
	return file_StressTestingInnerRpc_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectMasterResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 玩家登录请求 master分配
type PlayerLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginInfo []*PlayerLoginRequest_LoginInfo `protobuf:"bytes,1,rep,name=loginInfo,proto3" json:"loginInfo,omitempty"` //登录信息
}

func (x *PlayerLoginRequest) Reset() {
	*x = PlayerLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StressTestingInnerRpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLoginRequest) ProtoMessage() {}

func (x *PlayerLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_StressTestingInnerRpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLoginRequest.ProtoReflect.Descriptor instead.
func (*PlayerLoginRequest) Descriptor() ([]byte, []int) {
	return file_StressTestingInnerRpc_proto_rawDescGZIP(), []int{2}
}

func (x *PlayerLoginRequest) GetLoginInfo() []*PlayerLoginRequest_LoginInfo {
	if x != nil {
		return x.LoginInfo
	}
	return nil
}

// 玩家登录请求
type PlayerLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` //0成功
}

func (x *PlayerLoginResponse) Reset() {
	*x = PlayerLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StressTestingInnerRpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLoginResponse) ProtoMessage() {}

func (x *PlayerLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_StressTestingInnerRpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLoginResponse.ProtoReflect.Descriptor instead.
func (*PlayerLoginResponse) Descriptor() ([]byte, []int) {
	return file_StressTestingInnerRpc_proto_rawDescGZIP(), []int{3}
}

func (x *PlayerLoginResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 所有玩家停止压力测试
type PlayerAllQuitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlayerAllQuitRequest) Reset() {
	*x = PlayerAllQuitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StressTestingInnerRpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerAllQuitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAllQuitRequest) ProtoMessage() {}

func (x *PlayerAllQuitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_StressTestingInnerRpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAllQuitRequest.ProtoReflect.Descriptor instead.
func (*PlayerAllQuitRequest) Descriptor() ([]byte, []int) {
	return file_StressTestingInnerRpc_proto_rawDescGZIP(), []int{4}
}

// 所有玩家停止压力测试
type PlayerAllQuitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` //状态 0成功,1已经退出压测
}

func (x *PlayerAllQuitResponse) Reset() {
	*x = PlayerAllQuitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StressTestingInnerRpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerAllQuitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAllQuitResponse) ProtoMessage() {}

func (x *PlayerAllQuitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_StressTestingInnerRpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAllQuitResponse.ProtoReflect.Descriptor instead.
func (*PlayerAllQuitResponse) Descriptor() ([]byte, []int) {
	return file_StressTestingInnerRpc_proto_rawDescGZIP(), []int{5}
}

func (x *PlayerAllQuitResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 上传统计信息到master 每秒执行
// 充当心跳,不关服务器是否在进行压力测试，都上传
type UploadStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceInfo map[int32]*MessageInterfaceInfo           `protobuf:"bytes,1,rep,name=interfaceInfo,proto3" json:"interfaceInfo,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //接口信息
	WorkerServer  *UploadStatisticsRequest_WorkerServerInfo `protobuf:"bytes,2,opt,name=workerServer,proto3" json:"workerServer,omitempty"`                                                                                            //服务器主机信息
}

func (x *UploadStatisticsRequest) Reset() {
	*x = UploadStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StressTestingInnerRpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadStatisticsRequest) ProtoMessage() {}

func (x *UploadStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_StressTestingInnerRpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadStatisticsRequest.ProtoReflect.Descriptor instead.
func (*UploadStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_StressTestingInnerRpc_proto_rawDescGZIP(), []int{6}
}

func (x *UploadStatisticsRequest) GetInterfaceInfo() map[int32]*MessageInterfaceInfo {
	if x != nil {
		return x.InterfaceInfo
	}
	return nil
}

func (x *UploadStatisticsRequest) GetWorkerServer() *UploadStatisticsRequest_WorkerServerInfo {
	if x != nil {
		return x.WorkerServer
	}
	return nil
}

// 上传统计信息到master
type UploadStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` //0 成功
}

func (x *UploadStatisticsResponse) Reset() {
	*x = UploadStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StressTestingInnerRpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadStatisticsResponse) ProtoMessage() {}

func (x *UploadStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_StressTestingInnerRpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadStatisticsResponse.ProtoReflect.Descriptor instead.
func (*UploadStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_StressTestingInnerRpc_proto_rawDescGZIP(), []int{7}
}

func (x *UploadStatisticsResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 消息接口信息 主推消息只有 pushCount messageId startTime messageSize
type MessageInterfaceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId          int32 `protobuf:"varint,1,opt,name=messageId,proto3" json:"messageId,omitempty"`                    //消息id
	ExecuteTime        int64 `protobuf:"varint,2,opt,name=executeTime,proto3" json:"executeTime,omitempty"`                //总共执行时间(ns)
	FailCount          int32 `protobuf:"varint,3,opt,name=failCount,proto3" json:"failCount,omitempty"`                    //执行失败次数
	SuccessCount       int32 `protobuf:"varint,4,opt,name=successCount,proto3" json:"successCount,omitempty"`              //执行成功次数
	DelayMin           int64 `protobuf:"varint,5,opt,name=delayMin,proto3" json:"delayMin,omitempty"`                      //最小延迟 ns
	DelayMax           int64 `protobuf:"varint,6,opt,name=delayMax,proto3" json:"delayMax,omitempty"`                      //最大延迟 ns
	MessageSize        int64 `protobuf:"varint,7,opt,name=messageSize,proto3" json:"messageSize,omitempty"`                //消息总大小  MessageSize/SuccessCount=平均大小
	StartTime          int64 `protobuf:"varint,8,opt,name=startTime,proto3" json:"startTime,omitempty"`                    //计时开始时间 ns
	PushCount          int32 `protobuf:"varint,9,opt,name=pushCount,proto3" json:"pushCount,omitempty"`                    //主推次数，
	RequestMessageSize int64 `protobuf:"varint,10,opt,name=requestMessageSize,proto3" json:"requestMessageSize,omitempty"` //请求消息大小
}

func (x *MessageInterfaceInfo) Reset() {
	*x = MessageInterfaceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StressTestingInnerRpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageInterfaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInterfaceInfo) ProtoMessage() {}

func (x *MessageInterfaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_StressTestingInnerRpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInterfaceInfo.ProtoReflect.Descriptor instead.
func (*MessageInterfaceInfo) Descriptor() ([]byte, []int) {
	return file_StressTestingInnerRpc_proto_rawDescGZIP(), []int{8}
}

func (x *MessageInterfaceInfo) GetMessageId() int32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *MessageInterfaceInfo) GetExecuteTime() int64 {
	if x != nil {
		return x.ExecuteTime
	}
	return 0
}

func (x *MessageInterfaceInfo) GetFailCount() int32 {
	if x != nil {
		return x.FailCount
	}
	return 0
}

func (x *MessageInterfaceInfo) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *MessageInterfaceInfo) GetDelayMin() int64 {
	if x != nil {
		return x.DelayMin
	}
	return 0
}

func (x *MessageInterfaceInfo) GetDelayMax() int64 {
	if x != nil {
		return x.DelayMax
	}
	return 0
}

func (x *MessageInterfaceInfo) GetMessageSize() int64 {
	if x != nil {
		return x.MessageSize
	}
	return 0
}

func (x *MessageInterfaceInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *MessageInterfaceInfo) GetPushCount() int32 {
	if x != nil {
		return x.PushCount
	}
	return 0
}

func (x *MessageInterfaceInfo) GetRequestMessageSize() int64 {
	if x != nil {
		return x.RequestMessageSize
	}
	return 0
}

// 玩家消息信息
type PlayerMessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId          int32 `protobuf:"varint,1,opt,name=messageId,proto3" json:"messageId,omitempty"`                   //消息id
	StartTime          int64 `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`                   //消息开始执行时间戳 ms
	ExecuteTime        int64 `protobuf:"varint,3,opt,name=executeTime,proto3" json:"executeTime,omitempty"`               //执行时间(ms) 大于5000为失败 主推消息为0
	SequenceNo         int32 `protobuf:"varint,4,opt,name=sequenceNo,proto3" json:"sequenceNo,omitempty"`                 //序列号 主推消息为0
	MessageSize        int32 `protobuf:"varint,5,opt,name=messageSize,proto3" json:"messageSize,omitempty"`               //返回消息大小
	RequestMessageSize int32 `protobuf:"varint,6,opt,name=requestMessageSize,proto3" json:"requestMessageSize,omitempty"` //请求消息大小
}

func (x *PlayerMessageInfo) Reset() {
	*x = PlayerMessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StressTestingInnerRpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerMessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerMessageInfo) ProtoMessage() {}

func (x *PlayerMessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_StressTestingInnerRpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerMessageInfo.ProtoReflect.Descriptor instead.
func (*PlayerMessageInfo) Descriptor() ([]byte, []int) {
	return file_StressTestingInnerRpc_proto_rawDescGZIP(), []int{9}
}

func (x *PlayerMessageInfo) GetMessageId() int32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *PlayerMessageInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PlayerMessageInfo) GetExecuteTime() int64 {
	if x != nil {
		return x.ExecuteTime
	}
	return 0
}

func (x *PlayerMessageInfo) GetSequenceNo() int32 {
	if x != nil {
		return x.SequenceNo
	}
	return 0
}

func (x *PlayerMessageInfo) GetMessageSize() int32 {
	if x != nil {
		return x.MessageSize
	}
	return 0
}

func (x *PlayerMessageInfo) GetRequestMessageSize() int32 {
	if x != nil {
		return x.RequestMessageSize
	}
	return 0
}

// 登录信息
type PlayerLoginRequest_LoginInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`    //账号，暂时为设备号，账号到服务器去请求
	TestType int32  `protobuf:"varint,2,opt,name=testType,proto3" json:"testType,omitempty"` //测试类型  0模拟测试，测试slots对应slots的id
	GateUrl  string `protobuf:"bytes,3,opt,name=gateUrl,proto3" json:"gateUrl,omitempty"`    //登录的网关地址
}

func (x *PlayerLoginRequest_LoginInfo) Reset() {
	*x = PlayerLoginRequest_LoginInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StressTestingInnerRpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerLoginRequest_LoginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLoginRequest_LoginInfo) ProtoMessage() {}

func (x *PlayerLoginRequest_LoginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_StressTestingInnerRpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLoginRequest_LoginInfo.ProtoReflect.Descriptor instead.
func (*PlayerLoginRequest_LoginInfo) Descriptor() ([]byte, []int) {
	return file_StressTestingInnerRpc_proto_rawDescGZIP(), []int{2, 0}
}

func (x *PlayerLoginRequest_LoginInfo) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *PlayerLoginRequest_LoginInfo) GetTestType() int32 {
	if x != nil {
		return x.TestType
	}
	return 0
}

func (x *PlayerLoginRequest_LoginInfo) GetGateUrl() string {
	if x != nil {
		return x.GateUrl
	}
	return ""
}

// 工作服务器信息
type UploadStatisticsRequest_WorkerServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                //名称
	RpcHost     string  `protobuf:"bytes,2,opt,name=rpcHost,proto3" json:"rpcHost,omitempty"`          //rpc地址
	CpuRate     float64 `protobuf:"fixed64,3,opt,name=cpuRate,proto3" json:"cpuRate,omitempty"`        //CPU使用率
	MemorySize  int32   `protobuf:"varint,4,opt,name=memorySize,proto3" json:"memorySize,omitempty"`   //内存使用大小
	PlayerCount int32   `protobuf:"varint,5,opt,name=playerCount,proto3" json:"playerCount,omitempty"` //运行玩家数
}

func (x *UploadStatisticsRequest_WorkerServerInfo) Reset() {
	*x = UploadStatisticsRequest_WorkerServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StressTestingInnerRpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadStatisticsRequest_WorkerServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadStatisticsRequest_WorkerServerInfo) ProtoMessage() {}

func (x *UploadStatisticsRequest_WorkerServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_StressTestingInnerRpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadStatisticsRequest_WorkerServerInfo.ProtoReflect.Descriptor instead.
func (*UploadStatisticsRequest_WorkerServerInfo) Descriptor() ([]byte, []int) {
	return file_StressTestingInnerRpc_proto_rawDescGZIP(), []int{6, 1}
}

func (x *UploadStatisticsRequest_WorkerServerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UploadStatisticsRequest_WorkerServerInfo) GetRpcHost() string {
	if x != nil {
		return x.RpcHost
	}
	return ""
}

func (x *UploadStatisticsRequest_WorkerServerInfo) GetCpuRate() float64 {
	if x != nil {
		return x.CpuRate
	}
	return 0
}

func (x *UploadStatisticsRequest_WorkerServerInfo) GetMemorySize() int32 {
	if x != nil {
		return x.MemorySize
	}
	return 0
}

func (x *UploadStatisticsRequest_WorkerServerInfo) GetPlayerCount() int32 {
	if x != nil {
		return x.PlayerCount
	}
	return 0
}

var File_StressTestingInnerRpc_proto protoreflect.FileDescriptor

var file_StressTestingInnerRpc_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x53, 0x74, 0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x52, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a,
	0x14, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x70, 0x63, 0x48, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x70, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x09, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x5b, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61,
	0x74, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x2d, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6c,
	0x6c, 0x51, 0x75, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2f, 0x0a, 0x15,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x51, 0x75, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb3, 0x03,
	0x0a, 0x17, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x0c,
	0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x57, 0x0a, 0x12, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x9c, 0x01, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x70, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x70, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x70, 0x75, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x70, 0x75, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x32, 0x0a, 0x18, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xde, 0x02, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x4d, 0x69, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x4d, 0x69, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x4d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x4d, 0x61, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75,
	0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70,
	0x75, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x11, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x32, 0x9e,
	0x02, 0x0a, 0x19, 0x53, 0x74, 0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x15, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x13, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x51, 0x75, 0x69, 0x74, 0x12, 0x15, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x51, 0x75, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x51, 0x75, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x18, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x43, 0x0a, 0x20, 0x63, 0x6f, 0x6f, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x72, 0x70, 0x63, 0x42, 0x15, 0x53, 0x74, 0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x70, 0x63, 0x50, 0x01, 0x5a, 0x06, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_StressTestingInnerRpc_proto_rawDescOnce sync.Once
	file_StressTestingInnerRpc_proto_rawDescData = file_StressTestingInnerRpc_proto_rawDesc
)

func file_StressTestingInnerRpc_proto_rawDescGZIP() []byte {
	file_StressTestingInnerRpc_proto_rawDescOnce.Do(func() {
		file_StressTestingInnerRpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_StressTestingInnerRpc_proto_rawDescData)
	})
	return file_StressTestingInnerRpc_proto_rawDescData
}

var file_StressTestingInnerRpc_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_StressTestingInnerRpc_proto_goTypes = []interface{}{
	(*ConnectMasterRequest)(nil),                     // 0: ConnectMasterRequest
	(*ConnectMasterResponse)(nil),                    // 1: ConnectMasterResponse
	(*PlayerLoginRequest)(nil),                       // 2: PlayerLoginRequest
	(*PlayerLoginResponse)(nil),                      // 3: PlayerLoginResponse
	(*PlayerAllQuitRequest)(nil),                     // 4: PlayerAllQuitRequest
	(*PlayerAllQuitResponse)(nil),                    // 5: PlayerAllQuitResponse
	(*UploadStatisticsRequest)(nil),                  // 6: UploadStatisticsRequest
	(*UploadStatisticsResponse)(nil),                 // 7: UploadStatisticsResponse
	(*MessageInterfaceInfo)(nil),                     // 8: MessageInterfaceInfo
	(*PlayerMessageInfo)(nil),                        // 9: PlayerMessageInfo
	(*PlayerLoginRequest_LoginInfo)(nil),             // 10: PlayerLoginRequest.LoginInfo
	nil,                                              // 11: UploadStatisticsRequest.InterfaceInfoEntry
	(*UploadStatisticsRequest_WorkerServerInfo)(nil), // 12: UploadStatisticsRequest.WorkerServerInfo
}
var file_StressTestingInnerRpc_proto_depIdxs = []int32{
	10, // 0: PlayerLoginRequest.loginInfo:type_name -> PlayerLoginRequest.LoginInfo
	11, // 1: UploadStatisticsRequest.interfaceInfo:type_name -> UploadStatisticsRequest.InterfaceInfoEntry
	12, // 2: UploadStatisticsRequest.workerServer:type_name -> UploadStatisticsRequest.WorkerServerInfo
	8,  // 3: UploadStatisticsRequest.InterfaceInfoEntry.value:type_name -> MessageInterfaceInfo
	0,  // 4: StressTestingInnerService.connectMaster:input_type -> ConnectMasterRequest
	2,  // 5: StressTestingInnerService.playerLogin:input_type -> PlayerLoginRequest
	4,  // 6: StressTestingInnerService.playerAllQuit:input_type -> PlayerAllQuitRequest
	6,  // 7: StressTestingInnerService.uploadStatistics:input_type -> UploadStatisticsRequest
	1,  // 8: StressTestingInnerService.connectMaster:output_type -> ConnectMasterResponse
	3,  // 9: StressTestingInnerService.playerLogin:output_type -> PlayerLoginResponse
	5,  // 10: StressTestingInnerService.playerAllQuit:output_type -> PlayerAllQuitResponse
	7,  // 11: StressTestingInnerService.uploadStatistics:output_type -> UploadStatisticsResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_StressTestingInnerRpc_proto_init() }
func file_StressTestingInnerRpc_proto_init() {
	if File_StressTestingInnerRpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_StressTestingInnerRpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectMasterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StressTestingInnerRpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectMasterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StressTestingInnerRpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StressTestingInnerRpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StressTestingInnerRpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerAllQuitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StressTestingInnerRpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerAllQuitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StressTestingInnerRpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StressTestingInnerRpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StressTestingInnerRpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageInterfaceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StressTestingInnerRpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerMessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StressTestingInnerRpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerLoginRequest_LoginInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StressTestingInnerRpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadStatisticsRequest_WorkerServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_StressTestingInnerRpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_StressTestingInnerRpc_proto_goTypes,
		DependencyIndexes: file_StressTestingInnerRpc_proto_depIdxs,
		MessageInfos:      file_StressTestingInnerRpc_proto_msgTypes,
	}.Build()
	File_StressTestingInnerRpc_proto = out.File
	file_StressTestingInnerRpc_proto_rawDesc = nil
	file_StressTestingInnerRpc_proto_goTypes = nil
	file_StressTestingInnerRpc_proto_depIdxs = nil
}
