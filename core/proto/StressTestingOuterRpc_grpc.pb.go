// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.18.1
// source: StressTestingOuterRpc.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// StressTestingOuterServiceClient is the client API for StressTestingOuterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StressTestingOuterServiceClient interface {
	// 开始测试
	StartTest(ctx context.Context, in *StartTestRequest, opts ...grpc.CallOption) (*StartTestResponse, error)
	// 停止测试
	StopTest(ctx context.Context, in *StopTestRequest, opts ...grpc.CallOption) (*StopTestResponse, error)
	// 请求接口统计信息
	RequestInterfaceInfo(ctx context.Context, in *RequestInterfaceRequest, opts ...grpc.CallOption) (*RequestInterfaceResponse, error)
	// 推送接口统计信息
	PushInterfaceInfo(ctx context.Context, in *PushInterfaceRequest, opts ...grpc.CallOption) (*PushInterfaceResponse, error)
	// 统计日志
	StatisticsLog(ctx context.Context, in *StatisticsLogRequest, opts ...grpc.CallOption) (*StatisticsLogResponse, error)
	// 机器信息查询
	WorkerServerInfo(ctx context.Context, in *WorkerServerInfoRequest, opts ...grpc.CallOption) (*WorkerServerInfoResponse, error)
}

type stressTestingOuterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStressTestingOuterServiceClient(cc grpc.ClientConnInterface) StressTestingOuterServiceClient {
	return &stressTestingOuterServiceClient{cc}
}

func (c *stressTestingOuterServiceClient) StartTest(ctx context.Context, in *StartTestRequest, opts ...grpc.CallOption) (*StartTestResponse, error) {
	out := new(StartTestResponse)
	err := c.cc.Invoke(ctx, "/StressTestingOuterService/startTest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stressTestingOuterServiceClient) StopTest(ctx context.Context, in *StopTestRequest, opts ...grpc.CallOption) (*StopTestResponse, error) {
	out := new(StopTestResponse)
	err := c.cc.Invoke(ctx, "/StressTestingOuterService/stopTest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stressTestingOuterServiceClient) RequestInterfaceInfo(ctx context.Context, in *RequestInterfaceRequest, opts ...grpc.CallOption) (*RequestInterfaceResponse, error) {
	out := new(RequestInterfaceResponse)
	err := c.cc.Invoke(ctx, "/StressTestingOuterService/requestInterfaceInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stressTestingOuterServiceClient) PushInterfaceInfo(ctx context.Context, in *PushInterfaceRequest, opts ...grpc.CallOption) (*PushInterfaceResponse, error) {
	out := new(PushInterfaceResponse)
	err := c.cc.Invoke(ctx, "/StressTestingOuterService/pushInterfaceInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stressTestingOuterServiceClient) StatisticsLog(ctx context.Context, in *StatisticsLogRequest, opts ...grpc.CallOption) (*StatisticsLogResponse, error) {
	out := new(StatisticsLogResponse)
	err := c.cc.Invoke(ctx, "/StressTestingOuterService/statisticsLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stressTestingOuterServiceClient) WorkerServerInfo(ctx context.Context, in *WorkerServerInfoRequest, opts ...grpc.CallOption) (*WorkerServerInfoResponse, error) {
	out := new(WorkerServerInfoResponse)
	err := c.cc.Invoke(ctx, "/StressTestingOuterService/workerServerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StressTestingOuterServiceServer is the server API for StressTestingOuterService service.
// All implementations must embed UnimplementedStressTestingOuterServiceServer
// for forward compatibility
type StressTestingOuterServiceServer interface {
	// 开始测试
	StartTest(context.Context, *StartTestRequest) (*StartTestResponse, error)
	// 停止测试
	StopTest(context.Context, *StopTestRequest) (*StopTestResponse, error)
	// 请求接口统计信息
	RequestInterfaceInfo(context.Context, *RequestInterfaceRequest) (*RequestInterfaceResponse, error)
	// 推送接口统计信息
	PushInterfaceInfo(context.Context, *PushInterfaceRequest) (*PushInterfaceResponse, error)
	// 统计日志
	StatisticsLog(context.Context, *StatisticsLogRequest) (*StatisticsLogResponse, error)
	// 机器信息查询
	WorkerServerInfo(context.Context, *WorkerServerInfoRequest) (*WorkerServerInfoResponse, error)
	mustEmbedUnimplementedStressTestingOuterServiceServer()
}

// UnimplementedStressTestingOuterServiceServer must be embedded to have forward compatible implementations.
type UnimplementedStressTestingOuterServiceServer struct {
}

func (UnimplementedStressTestingOuterServiceServer) StartTest(context.Context, *StartTestRequest) (*StartTestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartTest not implemented")
}
func (UnimplementedStressTestingOuterServiceServer) StopTest(context.Context, *StopTestRequest) (*StopTestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopTest not implemented")
}
func (UnimplementedStressTestingOuterServiceServer) RequestInterfaceInfo(context.Context, *RequestInterfaceRequest) (*RequestInterfaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestInterfaceInfo not implemented")
}
func (UnimplementedStressTestingOuterServiceServer) PushInterfaceInfo(context.Context, *PushInterfaceRequest) (*PushInterfaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushInterfaceInfo not implemented")
}
func (UnimplementedStressTestingOuterServiceServer) StatisticsLog(context.Context, *StatisticsLogRequest) (*StatisticsLogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatisticsLog not implemented")
}
func (UnimplementedStressTestingOuterServiceServer) WorkerServerInfo(context.Context, *WorkerServerInfoRequest) (*WorkerServerInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WorkerServerInfo not implemented")
}
func (UnimplementedStressTestingOuterServiceServer) mustEmbedUnimplementedStressTestingOuterServiceServer() {
}

// UnsafeStressTestingOuterServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StressTestingOuterServiceServer will
// result in compilation errors.
type UnsafeStressTestingOuterServiceServer interface {
	mustEmbedUnimplementedStressTestingOuterServiceServer()
}

func RegisterStressTestingOuterServiceServer(s grpc.ServiceRegistrar, srv StressTestingOuterServiceServer) {
	s.RegisterService(&StressTestingOuterService_ServiceDesc, srv)
}

func _StressTestingOuterService_StartTest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartTestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StressTestingOuterServiceServer).StartTest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StressTestingOuterService/startTest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StressTestingOuterServiceServer).StartTest(ctx, req.(*StartTestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StressTestingOuterService_StopTest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopTestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StressTestingOuterServiceServer).StopTest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StressTestingOuterService/stopTest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StressTestingOuterServiceServer).StopTest(ctx, req.(*StopTestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StressTestingOuterService_RequestInterfaceInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestInterfaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StressTestingOuterServiceServer).RequestInterfaceInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StressTestingOuterService/requestInterfaceInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StressTestingOuterServiceServer).RequestInterfaceInfo(ctx, req.(*RequestInterfaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StressTestingOuterService_PushInterfaceInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushInterfaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StressTestingOuterServiceServer).PushInterfaceInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StressTestingOuterService/pushInterfaceInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StressTestingOuterServiceServer).PushInterfaceInfo(ctx, req.(*PushInterfaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StressTestingOuterService_StatisticsLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatisticsLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StressTestingOuterServiceServer).StatisticsLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StressTestingOuterService/statisticsLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StressTestingOuterServiceServer).StatisticsLog(ctx, req.(*StatisticsLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StressTestingOuterService_WorkerServerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkerServerInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StressTestingOuterServiceServer).WorkerServerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StressTestingOuterService/workerServerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StressTestingOuterServiceServer).WorkerServerInfo(ctx, req.(*WorkerServerInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// StressTestingOuterService_ServiceDesc is the grpc.ServiceDesc for StressTestingOuterService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StressTestingOuterService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "StressTestingOuterService",
	HandlerType: (*StressTestingOuterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "startTest",
			Handler:    _StressTestingOuterService_StartTest_Handler,
		},
		{
			MethodName: "stopTest",
			Handler:    _StressTestingOuterService_StopTest_Handler,
		},
		{
			MethodName: "requestInterfaceInfo",
			Handler:    _StressTestingOuterService_RequestInterfaceInfo_Handler,
		},
		{
			MethodName: "pushInterfaceInfo",
			Handler:    _StressTestingOuterService_PushInterfaceInfo_Handler,
		},
		{
			MethodName: "statisticsLog",
			Handler:    _StressTestingOuterService_StatisticsLog_Handler,
		},
		{
			MethodName: "workerServerInfo",
			Handler:    _StressTestingOuterService_WorkerServerInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "StressTestingOuterRpc.proto",
}
